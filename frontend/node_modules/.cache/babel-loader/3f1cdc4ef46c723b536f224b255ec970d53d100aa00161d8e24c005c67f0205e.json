{"ast":null,"code":"var _jsxFileName = \"/Users/sanji/AA/Seed Account/frontend/src/components/ShadowAccountManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport axios from 'axios';\nimport './ShadowAccountManager.css';\nimport RingSignatureVisualizer from './RingSignatureVisualizer';\n\n// ShadowLinker 合约 ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractABI = [\"function linkShadowAccount(address shadowAddr, address[] calldata ring, bytes32 keyImage, bytes32[] calldata c, bytes32[] calldata r) external\", \"function linkShadowAccountOptimized(address shadowAddr, address[] calldata ring, bytes32 keyImage, bytes32[] calldata z, bytes32 finalHash, bytes32 c0) external\", \"function isLinked(address shadowAddr) external view returns (bool)\", \"function getSeedAccount(address shadowAddr) external view returns (address)\", \"event ShadowLinked(address indexed shadowAddr, address indexed seedAddr, bytes32 keyImage)\"];\n\n// Sepolia 网络上部署的合约地址\nconst contractAddress = \"0x226C796394190AdAE21Bf619EE4296cD1C38b277\";\nfunction ShadowAccountManager({\n  seedAddress,\n  soulAddress,\n  shadowAddress,\n  certificationDetails,\n  isCertified,\n  isLinked,\n  onShadowAccountUpdated\n}) {\n  _s();\n  const [status, setStatus] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [shadowWallet, setShadowWallet] = useState(null);\n  const [localShadowAddress, setLocalShadowAddress] = useState(shadowAddress || '');\n  const [processingStep, setProcessingStep] = useState('');\n  const [shadowSignatureDetails, setShadowSignatureDetails] = useState(null);\n  const [localIsLinked, setLocalIsLinked] = useState(isLinked);\n\n  // 初始化\n  useEffect(() => {\n    const initProvider = async () => {\n      // 使用公共 RPC 提供商\n      const provider = new ethers.providers.JsonRpcProvider('https://sepolia.infura.io/v3/dbe77fbac5b8494e8f03b1099638abfd');\n      setProvider(provider);\n    };\n    initProvider();\n\n    // 从本地存储加载影子账户\n    const loadStoredShadowAccount = () => {\n      try {\n        const storedShadow = localStorage.getItem('shadowWallet');\n        if (storedShadow) {\n          const shadowData = JSON.parse(storedShadow);\n          const wallet = new ethers.Wallet(shadowData.privateKey);\n          setShadowWallet(wallet);\n          setLocalShadowAddress(shadowData.address);\n        }\n\n        // 加载影子账户签名详情\n        const storedSignature = localStorage.getItem('shadowSignatureDetails');\n        if (storedSignature) {\n          const signatureData = JSON.parse(storedSignature);\n          setShadowSignatureDetails(signatureData);\n        }\n      } catch (error) {\n        console.error('加载存储的影子账户失败:', error);\n      }\n    };\n    loadStoredShadowAccount();\n  }, []);\n\n  // 当 props 变化时更新本地状态\n  useEffect(() => {\n    if (shadowAddress) {\n      setLocalShadowAddress(shadowAddress);\n    }\n    setLocalIsLinked(isLinked);\n  }, [shadowAddress, isLinked]);\n\n  // 当影子账户变化时，通知父组件\n  useEffect(() => {\n    if (onShadowAccountUpdated && localShadowAddress) {\n      onShadowAccountUpdated(localShadowAddress, localIsLinked);\n    }\n  }, [localShadowAddress, localIsLinked, onShadowAccountUpdated]);\n\n  // 生成新的影子账户\n  const generateShadowAccount = () => {\n    try {\n      const wallet = ethers.Wallet.createRandom();\n      setShadowWallet(wallet);\n      setLocalShadowAddress(wallet.address);\n\n      // 保存到本地存储\n      localStorage.setItem('shadowWallet', JSON.stringify({\n        address: wallet.address,\n        privateKey: wallet.privateKey\n      }));\n      setStatus('影子账户生成成功！');\n\n      // 通知父组件\n      if (onShadowAccountUpdated) {\n        onShadowAccountUpdated(wallet.address, localIsLinked);\n      }\n    } catch (error) {\n      console.error('生成影子账户失败:', error);\n      setStatus('生成影子账户失败: ' + error.message);\n    }\n  };\n\n  // 关联影子账户\n  const linkShadowAccount = async () => {\n    // 声明 tx 变量\n    let tx;\n    try {\n      // 检查是否已经关联\n      if (localIsLinked) {\n        setStatus('此影子账户已经关联，无需重复操作。');\n        return;\n      }\n\n      // 检查是否已认证\n      if (!isCertified) {\n        setStatus('请先完成根账户认证，才能关联影子账户。');\n        return;\n      }\n      setProcessingStep('生成环签名');\n      setStatus('正在生成环签名...');\n\n      // 获取根账户私钥\n      let privateKey;\n      try {\n        privateKey = localStorage.getItem('seedPrivateKey');\n        if (!privateKey) {\n          privateKey = sessionStorage.getItem('seedPrivateKey');\n        }\n        if (!privateKey) {\n          throw new Error('无法获取根账户私钥');\n        }\n        console.log('步骤1: 获取根账户私钥成功');\n      } catch (error) {\n        console.error('获取根账户私钥失败:', error);\n        throw new Error('获取根账户私钥失败: ' + error.message);\n      }\n\n      // 调用后端API生成环签名\n      let response;\n      let signatureData;\n      try {\n        console.log('步骤2: 准备调用环签名生成API', {\n          seedAddress: seedAddress,\n          shadowAddress: localShadowAddress,\n          ringLength: 5,\n          hasPrivateKey: !!privateKey\n        });\n\n        // 确保包含所有必要参数\n        response = await axios.post('http://localhost:3003/api/generate-shadow-signature', {\n          seedAddress: seedAddress,\n          seedPrivateKey: privateKey,\n          shadowAddress: localShadowAddress,\n          ringSize: 5\n        });\n        console.log('步骤2: 环签名生成成功', {\n          ringLength: response.data.ring.length,\n          keyImage: response.data.keyImage,\n          signatureKeys: Object.keys(response.data.signature),\n          signatureC: response.data.signature.c ? response.data.signature.c.length : 0,\n          signatureR: response.data.signature.r ? response.data.signature.r.length : 0\n        });\n        signatureData = response.data.signature;\n        console.log('步骤4: 交易参数准备完成', {\n          signatureDataKeys: Object.keys(signatureData),\n          hasC: !!signatureData.c,\n          hasR: !!signatureData.r\n        });\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('生成环签名失败:', error);\n        if (error.response && error.response.data) {\n          console.error('服务器返回的错误信息:', error.response.data);\n        }\n        throw new Error('生成环签名失败: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message));\n      }\n\n      // 验证环签名\n      setStatus('正在验证环签名...');\n      try {\n        console.log('步骤3: 准备验证环签名', {\n          shadowAddress: localShadowAddress,\n          ringLength: response.data.ring.length,\n          keyImage: response.data.keyImage,\n          signatureC: signatureData.c ? signatureData.c.length : 0,\n          signatureR: signatureData.r ? signatureData.r.length : 0\n        });\n        const verifyResponse = await axios.post('http://localhost:3003/api/verify-shadow-signature', {\n          seedAddress: seedAddress,\n          shadowAddress: localShadowAddress,\n          ring: response.data.ring,\n          signature: signatureData,\n          keyImage: response.data.keyImage\n        });\n        if (!verifyResponse.data.valid) {\n          throw new Error('环签名验证失败: ' + verifyResponse.data.message);\n        }\n        console.log('步骤3: 环签名验证成功');\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        console.error('环签名验证失败:', error);\n        if (error.response && error.response.data) {\n          console.error('服务器返回的错误信息:', error.response.data);\n        }\n        throw new Error('环签名验证失败: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message));\n      }\n\n      // 在提交交易前添加详细日志\n      console.log('提交给合约的环签名数据:', {\n        seedAddress,\n        shadowAddress: localShadowAddress,\n        ring: response.data.ring,\n        keyImage: response.data.keyImage,\n        signatureC: signatureData.c,\n        signatureR: signatureData.r,\n        signatureCLength: signatureData.c.length,\n        signatureRLength: signatureData.r.length\n      });\n\n      // 确保所有参数都是正确的格式\n      const formattedKeyImage = response.data.keyImage.startsWith('0x') ? response.data.keyImage : '0x' + response.data.keyImage;\n      const formattedC = signatureData.c.map(c => c.startsWith('0x') ? c : '0x' + c);\n      const formattedR = signatureData.r.map(r => r.startsWith('0x') ? r : '0x' + r);\n      setProcessingStep('提交交易');\n      setStatus('正在提交关联交易...');\n\n      // 创建钱包实例\n      const seedWallet = new ethers.Wallet(privateKey, provider);\n\n      // 创建合约实例\n      const contract = new ethers.Contract(contractAddress, contractABI, seedWallet);\n\n      // 打印合约ABI，检查是否包含所有事件\n      console.log('合约ABI:', contractABI);\n\n      // 检查合约地址\n      console.log('合约地址:', contractAddress);\n\n      // 设置明确的gas限制，解决gas估算问题\n      const gasLimit = ethers.utils.hexlify(500000); // 设置足够高的gas限制\n      console.log('步骤5: 设置gas限制为', gasLimit);\n\n      // 使用try-catch包装事件监听\n      try {\n        // 添加通用错误事件监听\n        contract.on(\"error\", error => {\n          console.error('合约事件错误:', error);\n        });\n\n        // 监听所有事件\n        contract.on(\"*\", event => {\n          console.log('检测到合约事件:', event);\n        });\n      } catch (error) {\n        console.log('设置事件监听失败:', error.message);\n        // 继续执行，不中断主流程\n      }\n\n      // 检查合约方法\n      console.log('合约方法:', Object.keys(contract.functions));\n\n      // 尝试调用合约方法\n      try {\n        // 检查合约是否有linkShadowAccount方法\n        if ('linkShadowAccount' in contract.functions) {\n          console.log('调用linkShadowAccount方法');\n          tx = await contract.linkShadowAccount(localShadowAddress, response.data.ring, formattedKeyImage, formattedC, formattedR, {\n            gasLimit\n          });\n        }\n        // 如果没有linkShadowAccount方法，尝试使用certifySeed方法\n        else if ('certifySeed' in contract.functions) {\n          console.log('调用certifySeed方法');\n\n          // 查看certifySeed方法的参数\n          const certifyMethod = contractABI.find(item => typeof item === 'string' && item.includes('certifySeed('));\n          console.log('certifySeed方法定义:', certifyMethod);\n\n          // 根据ABI调用方法\n          tx = await contract.certifySeed(seedAddress, localShadowAddress, response.data.ring, formattedKeyImage, formattedC, formattedR, {\n            gasLimit\n          });\n        } else {\n          throw new Error('合约中没有找到可用的方法');\n        }\n        console.log('交易已提交:', tx);\n        setProcessingStep('等待确认');\n        setStatus(`交易已提交，等待确认... 交易哈希: ${tx.hash}`);\n\n        // 等待交易确认\n        const receipt = await tx.wait();\n        console.log('步骤8: 交易已确认', receipt);\n\n        // 检查交易是否成功\n        if (receipt.status === 1) {\n          console.log('步骤9: 交易执行成功');\n\n          // 检查合约中的关联状态\n          const isLinkedInContract = await contract.isLinked(localShadowAddress);\n          console.log('步骤10: 合约中的关联状态:', isLinkedInContract);\n          setProcessingStep('完成关联');\n\n          // 保存签名数据\n          const shadowSignatureData = {\n            ring: response.data.ring,\n            keyImage: response.data.keyImage,\n            signature: signatureData,\n            timestamp: new Date().toISOString(),\n            seedAddress: seedAddress,\n            shadowAddress: localShadowAddress\n          };\n          setShadowSignatureDetails(shadowSignatureData);\n          localStorage.setItem('shadowSignatureDetails', JSON.stringify(shadowSignatureData));\n\n          // 更新状态\n          setLocalIsLinked(true);\n          setStatus('影子账户已成功关联根账户！');\n          setProcessingStep('');\n\n          // 通知父组件\n          if (onShadowAccountUpdated) {\n            onShadowAccountUpdated(localShadowAddress, true);\n          }\n        } else {\n          throw new Error('交易已确认但执行失败');\n        }\n      } catch (error) {\n        console.error('交易提交失败:', error);\n\n        // 尝试使用更简单的参数调用\n        try {\n          console.log('尝试使用简化参数调用合约...');\n\n          // 检查合约是否有certifySeed方法\n          if ('certifySeed' in contract.functions) {\n            // 获取方法参数数量\n            const methodAbi = contract.interface.getFunction('certifySeed');\n            console.log('certifySeed方法参数:', methodAbi.inputs);\n\n            // 根据实际参数数量调用\n            if (methodAbi.inputs.length === 5) {\n              tx = await contract.certifySeed(seedAddress, localShadowAddress, response.data.ring, formattedKeyImage, formattedC, {\n                gasLimit\n              });\n            } else {\n              tx = await contract.certifySeed(seedAddress, localShadowAddress, response.data.ring, formattedKeyImage, formattedC, formattedR, {\n                gasLimit\n              });\n            }\n            console.log('简化参数交易已提交:', tx);\n          } else {\n            throw new Error('合约中没有找到可用的方法');\n          }\n        } catch (backupError) {\n          console.error('备用方法也失败:', backupError);\n          throw backupError;\n        }\n      }\n    } catch (error) {\n      console.error('关联影子账户失败:', error);\n      setStatus('关联失败: ' + error.message);\n      setProcessingStep('');\n    }\n  };\n\n  // 解除关联\n  const unlinkShadowAccount = () => {\n    // 清除关联状态\n    setLocalIsLinked(false);\n    setShadowSignatureDetails(null);\n\n    // 清除本地存储中的关联数据\n    localStorage.removeItem('shadowSignatureDetails');\n\n    // 通知父组件\n    if (onShadowAccountUpdated) {\n      onShadowAccountUpdated(localShadowAddress, false);\n    }\n    setStatus('影子账户关联已解除，您可以重新关联或创建新的影子账户。');\n  };\n  useEffect(() => {\n    if (shadowWallet) {\n      console.log('影子钱包已设置:', shadowWallet.address);\n    }\n  }, [shadowWallet]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shadow-account-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow-account-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u5F71\\u5B50\\u8D26\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), !localShadowAddress ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow-account-create\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u5F71\\u5B50\\u8D26\\u6237\\u662F\\u4E00\\u4E2A\\u666E\\u901A\\u7684\\u4EE5\\u592A\\u574A\\u8D26\\u6237\\uFF0C\\u53EF\\u4EE5\\u901A\\u8FC7\\u73AF\\u7B7E\\u540D\\u4E0E\\u60A8\\u7684\\u6839\\u8D26\\u6237\\u5173\\u8054\\uFF0C\\u4F46\\u4E0D\\u4F1A\\u6CC4\\u9732\\u60A8\\u7684\\u8EAB\\u4EFD\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateShadowAccount,\n          className: \"generate-button\",\n          children: \"\\u751F\\u6210\\u65B0\\u7684\\u5F71\\u5B50\\u8D26\\u6237\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow-account-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u5F71\\u5B50\\u8D26\\u6237\\u5730\\u5740:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 16\n          }, this), \" \", localShadowAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), !localIsLinked ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"link-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u60A8\\u9700\\u8981\\u5C06\\u6B64\\u5F71\\u5B50\\u8D26\\u6237\\u4E0E\\u60A8\\u7684\\u6839\\u8D26\\u6237\\u5173\\u8054\\uFF0C\\u624D\\u80FD\\u4F7F\\u7528\\u5B83\\u8FDB\\u884C\\u533F\\u540D\\u4EA4\\u6613\\u3002\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: linkShadowAccount,\n            className: \"link-button\",\n            disabled: !isCertified || !certificationDetails,\n            children: \"\\u5173\\u8054\\u5F71\\u5B50\\u8D26\\u6237\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, this), !isCertified && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"warning\",\n            children: \"\\u8BF7\\u5148\\u5B8C\\u6210\\u6839\\u8D26\\u6237\\u8BA4\\u8BC1\\uFF0C\\u624D\\u80FD\\u5173\\u8054\\u5F71\\u5B50\\u8D26\\u6237\\u3002\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linked-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u5173\\u8054\\u72B6\\u6001\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"linked-badge\",\n              children: \"\\u5DF2\\u5173\\u8054\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u60A8\\u7684\\u5F71\\u5B50\\u8D26\\u6237\\u5DF2\\u6210\\u529F\\u5173\\u8054\\u6839\\u8D26\\u6237\\u3002\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u73B0\\u5728\\u60A8\\u53EF\\u4EE5\\u4F7F\\u7528\\u6B64\\u5F71\\u5B50\\u8D26\\u6237\\u8FDB\\u884C\\u4EA4\\u6613\\uFF0C\\u800C\\u4E0D\\u4F1A\\u6CC4\\u9732\\u60A8\\u7684\\u6839\\u8D26\\u6237\\u8EAB\\u4EFD\\u3002\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: unlinkShadowAccount,\n            className: \"unlink-button\",\n            children: \"\\u89E3\\u9664\\u5173\\u8054\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), processingStep && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing-steps\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u5904\\u7406\\u6B65\\u9AA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${processingStep === '生成环签名' ? 'active' : ''}`,\n          children: \"\\u751F\\u6210\\u73AF\\u7B7E\\u540D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${processingStep === '提交交易' ? 'active' : ''}`,\n          children: \"\\u63D0\\u4EA4\\u4EA4\\u6613\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${processingStep === '等待确认' ? 'active' : ''}`,\n          children: \"\\u7B49\\u5F85\\u786E\\u8BA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${processingStep === '完成关联' ? 'active' : ''}`,\n          children: \"\\u5B8C\\u6210\\u5173\\u8054\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 18\n    }, this), localIsLinked && shadowSignatureDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usage-guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u5982\\u4F55\\u4F7F\\u7528\\u60A8\\u7684\\u5F71\\u5B50\\u8D26\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u5BFC\\u5165\\u5230\\u94B1\\u5305\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), \" \\u60A8\\u53EF\\u4EE5\\u5C06\\u5F71\\u5B50\\u8D26\\u6237\\u7684\\u79C1\\u94A5\\u5BFC\\u5165\\u5230\\u4EFB\\u4F55\\u4EE5\\u592A\\u574A\\u94B1\\u5305\\u4E2D\\uFF08\\u5982 MetaMask\\uFF09\\u3002\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u8FDB\\u884C\\u4EA4\\u6613\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this), \" \\u4F7F\\u7528\\u5F71\\u5B50\\u8D26\\u6237\\u8FDB\\u884C\\u4EA4\\u6613\\uFF0C\\u5C31\\u50CF\\u4F7F\\u7528\\u666E\\u901A\\u4EE5\\u592A\\u574A\\u8D26\\u6237\\u4E00\\u6837\\u3002\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u4FDD\\u6301\\u533F\\u540D\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), \" \\u7531\\u4E8E\\u5F71\\u5B50\\u8D26\\u6237\\u4E0E\\u60A8\\u7684\\u6839\\u8D26\\u6237\\u4E4B\\u95F4\\u7684\\u5173\\u8054\\u662F\\u901A\\u8FC7\\u73AF\\u7B7E\\u540D\\u5EFA\\u7ACB\\u7684\\uFF0C\\u6CA1\\u6709\\u4EBA\\u80FD\\u591F\\u786E\\u5B9A\\u60A8\\u662F\\u73AF\\u4E2D\\u7684\\u54EA\\u4E2A\\u6210\\u5458\\u3002\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u5B89\\u5168\\u63D0\\u793A\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), \" \\u8BF7\\u59A5\\u5584\\u4FDD\\u7BA1\\u60A8\\u7684\\u5F71\\u5B50\\u8D26\\u6237\\u79C1\\u94A5\\uFF0C\\u4E0D\\u8981\\u5C06\\u5176\\u6CC4\\u9732\\u7ED9\\u4ED6\\u4EBA\\u3002\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"private-key-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u5F71\\u5B50\\u8D26\\u6237\\u79C1\\u94A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"warning\",\n          children: \"\\u8B66\\u544A\\uFF1A\\u79C1\\u94A5\\u662F\\u8BBF\\u95EE\\u60A8\\u8D26\\u6237\\u7684\\u552F\\u4E00\\u51ED\\u8BC1\\uFF0C\\u8BF7\\u59A5\\u5584\\u4FDD\\u7BA1\\uFF0C\\u4E0D\\u8981\\u6CC4\\u9732\\u7ED9\\u4ED6\\u4EBA\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const shadowData = JSON.parse(localStorage.getItem('shadowWallet'));\n            if (shadowData) {\n              alert(`您的影子账户私钥：${shadowData.privateKey}\\n\\n请妥善保管，不要泄露给他人！`);\n            }\n          },\n          className: \"show-key-button\",\n          children: \"\\u663E\\u793A\\u79C1\\u94A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 431,\n    columnNumber: 5\n  }, this);\n}\n_s(ShadowAccountManager, \"3OAE9HB96gxL0dMkdCDb6Z54IG0=\");\n_c = ShadowAccountManager;\nexport default ShadowAccountManager;\nvar _c;\n$RefreshReg$(_c, \"ShadowAccountManager\");","map":{"version":3,"names":["React","useState","useEffect","ethers","axios","RingSignatureVisualizer","jsxDEV","_jsxDEV","contractABI","contractAddress","ShadowAccountManager","seedAddress","soulAddress","shadowAddress","certificationDetails","isCertified","isLinked","onShadowAccountUpdated","_s","status","setStatus","provider","setProvider","shadowWallet","setShadowWallet","localShadowAddress","setLocalShadowAddress","processingStep","setProcessingStep","shadowSignatureDetails","setShadowSignatureDetails","localIsLinked","setLocalIsLinked","initProvider","providers","JsonRpcProvider","loadStoredShadowAccount","storedShadow","localStorage","getItem","shadowData","JSON","parse","wallet","Wallet","privateKey","address","storedSignature","signatureData","error","console","generateShadowAccount","createRandom","setItem","stringify","message","linkShadowAccount","tx","sessionStorage","Error","log","response","ringLength","hasPrivateKey","post","seedPrivateKey","ringSize","data","ring","length","keyImage","signatureKeys","Object","keys","signature","signatureC","c","signatureR","r","signatureDataKeys","hasC","hasR","_error$response","_error$response$data","verifyResponse","valid","_error$response2","_error$response2$data","signatureCLength","signatureRLength","formattedKeyImage","startsWith","formattedC","map","formattedR","seedWallet","contract","Contract","gasLimit","utils","hexlify","on","event","functions","certifyMethod","find","item","includes","certifySeed","hash","receipt","wait","isLinkedInContract","shadowSignatureData","timestamp","Date","toISOString","methodAbi","interface","getFunction","inputs","backupError","unlinkShadowAccount","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","alert","_c","$RefreshReg$"],"sources":["/Users/sanji/AA/Seed Account/frontend/src/components/ShadowAccountManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport axios from 'axios';\nimport './ShadowAccountManager.css';\nimport RingSignatureVisualizer from './RingSignatureVisualizer';\n\n// ShadowLinker 合约 ABI\nconst contractABI = [\n  \"function linkShadowAccount(address shadowAddr, address[] calldata ring, bytes32 keyImage, bytes32[] calldata c, bytes32[] calldata r) external\",\n  \"function linkShadowAccountOptimized(address shadowAddr, address[] calldata ring, bytes32 keyImage, bytes32[] calldata z, bytes32 finalHash, bytes32 c0) external\",\n  \"function isLinked(address shadowAddr) external view returns (bool)\",\n  \"function getSeedAccount(address shadowAddr) external view returns (address)\",\n  \"event ShadowLinked(address indexed shadowAddr, address indexed seedAddr, bytes32 keyImage)\"\n];\n\n// Sepolia 网络上部署的合约地址\nconst contractAddress = \"0x226C796394190AdAE21Bf619EE4296cD1C38b277\";\n\nfunction ShadowAccountManager({ seedAddress, soulAddress, shadowAddress, certificationDetails, isCertified, isLinked, onShadowAccountUpdated }) {\n  const [status, setStatus] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [shadowWallet, setShadowWallet] = useState(null);\n  const [localShadowAddress, setLocalShadowAddress] = useState(shadowAddress || '');\n  const [processingStep, setProcessingStep] = useState('');\n  const [shadowSignatureDetails, setShadowSignatureDetails] = useState(null);\n  const [localIsLinked, setLocalIsLinked] = useState(isLinked);\n  \n  // 初始化\n  useEffect(() => {\n    const initProvider = async () => {\n      // 使用公共 RPC 提供商\n      const provider = new ethers.providers.JsonRpcProvider('https://sepolia.infura.io/v3/dbe77fbac5b8494e8f03b1099638abfd');\n      setProvider(provider);\n    };\n    \n    initProvider();\n    \n    // 从本地存储加载影子账户\n    const loadStoredShadowAccount = () => {\n      try {\n        const storedShadow = localStorage.getItem('shadowWallet');\n        if (storedShadow) {\n          const shadowData = JSON.parse(storedShadow);\n          const wallet = new ethers.Wallet(shadowData.privateKey);\n          setShadowWallet(wallet);\n          setLocalShadowAddress(shadowData.address);\n        }\n        \n        // 加载影子账户签名详情\n        const storedSignature = localStorage.getItem('shadowSignatureDetails');\n        if (storedSignature) {\n          const signatureData = JSON.parse(storedSignature);\n          setShadowSignatureDetails(signatureData);\n        }\n      } catch (error) {\n        console.error('加载存储的影子账户失败:', error);\n      }\n    };\n    \n    loadStoredShadowAccount();\n  }, []);\n  \n  // 当 props 变化时更新本地状态\n  useEffect(() => {\n    if (shadowAddress) {\n      setLocalShadowAddress(shadowAddress);\n    }\n    setLocalIsLinked(isLinked);\n  }, [shadowAddress, isLinked]);\n  \n  // 当影子账户变化时，通知父组件\n  useEffect(() => {\n    if (onShadowAccountUpdated && localShadowAddress) {\n      onShadowAccountUpdated(localShadowAddress, localIsLinked);\n    }\n  }, [localShadowAddress, localIsLinked, onShadowAccountUpdated]);\n  \n  // 生成新的影子账户\n  const generateShadowAccount = () => {\n    try {\n      const wallet = ethers.Wallet.createRandom();\n      setShadowWallet(wallet);\n      setLocalShadowAddress(wallet.address);\n      \n      // 保存到本地存储\n      localStorage.setItem('shadowWallet', JSON.stringify({\n        address: wallet.address,\n        privateKey: wallet.privateKey\n      }));\n      \n      setStatus('影子账户生成成功！');\n      \n      // 通知父组件\n      if (onShadowAccountUpdated) {\n        onShadowAccountUpdated(wallet.address, localIsLinked);\n      }\n    } catch (error) {\n      console.error('生成影子账户失败:', error);\n      setStatus('生成影子账户失败: ' + error.message);\n    }\n  };\n  \n  // 关联影子账户\n  const linkShadowAccount = async () => {\n    // 声明 tx 变量\n    let tx;\n    \n    try {\n      // 检查是否已经关联\n      if (localIsLinked) {\n        setStatus('此影子账户已经关联，无需重复操作。');\n        return;\n      }\n      \n      // 检查是否已认证\n      if (!isCertified) {\n        setStatus('请先完成根账户认证，才能关联影子账户。');\n        return;\n      }\n      \n      setProcessingStep('生成环签名');\n      setStatus('正在生成环签名...');\n      \n      // 获取根账户私钥\n      let privateKey;\n      try {\n        privateKey = localStorage.getItem('seedPrivateKey');\n        if (!privateKey) {\n          privateKey = sessionStorage.getItem('seedPrivateKey');\n        }\n        \n        if (!privateKey) {\n          throw new Error('无法获取根账户私钥');\n        }\n        \n        console.log('步骤1: 获取根账户私钥成功');\n      } catch (error) {\n        console.error('获取根账户私钥失败:', error);\n        throw new Error('获取根账户私钥失败: ' + error.message);\n      }\n      \n      // 调用后端API生成环签名\n      let response;\n      let signatureData;\n      \n      try {\n        console.log('步骤2: 准备调用环签名生成API', {\n          seedAddress: seedAddress,\n          shadowAddress: localShadowAddress,\n          ringLength: 5,\n          hasPrivateKey: !!privateKey\n        });\n        \n        // 确保包含所有必要参数\n        response = await axios.post('http://localhost:3003/api/generate-shadow-signature', {\n          seedAddress: seedAddress,\n          seedPrivateKey: privateKey,\n          shadowAddress: localShadowAddress,\n          ringSize: 5\n        });\n        \n        console.log('步骤2: 环签名生成成功', {\n          ringLength: response.data.ring.length,\n          keyImage: response.data.keyImage,\n          signatureKeys: Object.keys(response.data.signature),\n          signatureC: response.data.signature.c ? response.data.signature.c.length : 0,\n          signatureR: response.data.signature.r ? response.data.signature.r.length : 0\n        });\n        \n        signatureData = response.data.signature;\n        \n        console.log('步骤4: 交易参数准备完成', {\n          signatureDataKeys: Object.keys(signatureData),\n          hasC: !!signatureData.c,\n          hasR: !!signatureData.r\n        });\n      } catch (error) {\n        console.error('生成环签名失败:', error);\n        if (error.response && error.response.data) {\n          console.error('服务器返回的错误信息:', error.response.data);\n        }\n        throw new Error('生成环签名失败: ' + (error.response?.data?.error || error.message));\n      }\n      \n      // 验证环签名\n      setStatus('正在验证环签名...');\n      try {\n        console.log('步骤3: 准备验证环签名', {\n          shadowAddress: localShadowAddress,\n          ringLength: response.data.ring.length,\n          keyImage: response.data.keyImage,\n          signatureC: signatureData.c ? signatureData.c.length : 0,\n          signatureR: signatureData.r ? signatureData.r.length : 0\n        });\n        \n        const verifyResponse = await axios.post('http://localhost:3003/api/verify-shadow-signature', {\n          seedAddress: seedAddress,\n          shadowAddress: localShadowAddress,\n          ring: response.data.ring,\n          signature: signatureData,\n          keyImage: response.data.keyImage\n        });\n        \n        if (!verifyResponse.data.valid) {\n          throw new Error('环签名验证失败: ' + verifyResponse.data.message);\n        }\n        \n        console.log('步骤3: 环签名验证成功');\n      } catch (error) {\n        console.error('环签名验证失败:', error);\n        if (error.response && error.response.data) {\n          console.error('服务器返回的错误信息:', error.response.data);\n        }\n        throw new Error('环签名验证失败: ' + (error.response?.data?.error || error.message));\n      }\n      \n      // 在提交交易前添加详细日志\n      console.log('提交给合约的环签名数据:', {\n        seedAddress,\n        shadowAddress: localShadowAddress,\n        ring: response.data.ring,\n        keyImage: response.data.keyImage,\n        signatureC: signatureData.c,\n        signatureR: signatureData.r,\n        signatureCLength: signatureData.c.length,\n        signatureRLength: signatureData.r.length\n      });\n      \n      // 确保所有参数都是正确的格式\n      const formattedKeyImage = response.data.keyImage.startsWith('0x') ? response.data.keyImage : '0x' + response.data.keyImage;\n      const formattedC = signatureData.c.map(c => c.startsWith('0x') ? c : '0x' + c);\n      const formattedR = signatureData.r.map(r => r.startsWith('0x') ? r : '0x' + r);\n      \n      setProcessingStep('提交交易');\n      setStatus('正在提交关联交易...');\n      \n      // 创建钱包实例\n      const seedWallet = new ethers.Wallet(privateKey, provider);\n      \n      // 创建合约实例\n      const contract = new ethers.Contract(contractAddress, contractABI, seedWallet);\n      \n      // 打印合约ABI，检查是否包含所有事件\n      console.log('合约ABI:', contractABI);\n\n      // 检查合约地址\n      console.log('合约地址:', contractAddress);\n      \n      // 设置明确的gas限制，解决gas估算问题\n      const gasLimit = ethers.utils.hexlify(500000); // 设置足够高的gas限制\n      console.log('步骤5: 设置gas限制为', gasLimit);\n      \n      // 使用try-catch包装事件监听\n      try {\n        // 添加通用错误事件监听\n        contract.on(\"error\", (error) => {\n          console.error('合约事件错误:', error);\n        });\n        \n        // 监听所有事件\n        contract.on(\"*\", (event) => {\n          console.log('检测到合约事件:', event);\n        });\n      } catch (error) {\n        console.log('设置事件监听失败:', error.message);\n        // 继续执行，不中断主流程\n      }\n      \n      // 检查合约方法\n      console.log('合约方法:', Object.keys(contract.functions));\n\n      // 尝试调用合约方法\n      try {\n        // 检查合约是否有linkShadowAccount方法\n        if ('linkShadowAccount' in contract.functions) {\n          console.log('调用linkShadowAccount方法');\n          \n          tx = await contract.linkShadowAccount(\n            localShadowAddress,\n            response.data.ring,\n            formattedKeyImage,\n            formattedC,\n            formattedR,\n            { gasLimit }\n          );\n        }\n        // 如果没有linkShadowAccount方法，尝试使用certifySeed方法\n        else if ('certifySeed' in contract.functions) {\n          console.log('调用certifySeed方法');\n          \n          // 查看certifySeed方法的参数\n          const certifyMethod = contractABI.find(item => \n            typeof item === 'string' && item.includes('certifySeed(')\n          );\n          console.log('certifySeed方法定义:', certifyMethod);\n          \n          // 根据ABI调用方法\n          tx = await contract.certifySeed(\n            seedAddress,\n            localShadowAddress,\n            response.data.ring,\n            formattedKeyImage,\n            formattedC,\n            formattedR,\n            { gasLimit }\n          );\n        }\n        else {\n          throw new Error('合约中没有找到可用的方法');\n        }\n        \n        console.log('交易已提交:', tx);\n        \n        setProcessingStep('等待确认');\n        setStatus(`交易已提交，等待确认... 交易哈希: ${tx.hash}`);\n        \n        // 等待交易确认\n        const receipt = await tx.wait();\n        console.log('步骤8: 交易已确认', receipt);\n        \n        // 检查交易是否成功\n        if (receipt.status === 1) {\n          console.log('步骤9: 交易执行成功');\n          \n          // 检查合约中的关联状态\n          const isLinkedInContract = await contract.isLinked(localShadowAddress);\n          console.log('步骤10: 合约中的关联状态:', isLinkedInContract);\n          \n          setProcessingStep('完成关联');\n          \n          // 保存签名数据\n          const shadowSignatureData = {\n            ring: response.data.ring,\n            keyImage: response.data.keyImage,\n            signature: signatureData,\n            timestamp: new Date().toISOString(),\n            seedAddress: seedAddress,\n            shadowAddress: localShadowAddress\n          };\n          \n          setShadowSignatureDetails(shadowSignatureData);\n          localStorage.setItem('shadowSignatureDetails', JSON.stringify(shadowSignatureData));\n          \n          // 更新状态\n          setLocalIsLinked(true);\n          setStatus('影子账户已成功关联根账户！');\n          setProcessingStep('');\n          \n          // 通知父组件\n          if (onShadowAccountUpdated) {\n            onShadowAccountUpdated(localShadowAddress, true);\n          }\n        } else {\n          throw new Error('交易已确认但执行失败');\n        }\n      } catch (error) {\n        console.error('交易提交失败:', error);\n        \n        // 尝试使用更简单的参数调用\n        try {\n          console.log('尝试使用简化参数调用合约...');\n          \n          // 检查合约是否有certifySeed方法\n          if ('certifySeed' in contract.functions) {\n            // 获取方法参数数量\n            const methodAbi = contract.interface.getFunction('certifySeed');\n            console.log('certifySeed方法参数:', methodAbi.inputs);\n            \n            // 根据实际参数数量调用\n            if (methodAbi.inputs.length === 5) {\n              tx = await contract.certifySeed(\n                seedAddress,\n                localShadowAddress,\n                response.data.ring,\n                formattedKeyImage,\n                formattedC,\n                { gasLimit }\n              );\n            } else {\n              tx = await contract.certifySeed(\n                seedAddress,\n                localShadowAddress,\n                response.data.ring,\n                formattedKeyImage,\n                formattedC,\n                formattedR,\n                { gasLimit }\n              );\n            }\n            \n            console.log('简化参数交易已提交:', tx);\n          } else {\n            throw new Error('合约中没有找到可用的方法');\n          }\n        } catch (backupError) {\n          console.error('备用方法也失败:', backupError);\n          throw backupError;\n        }\n      }\n    } catch (error) {\n      console.error('关联影子账户失败:', error);\n      setStatus('关联失败: ' + error.message);\n      setProcessingStep('');\n    }\n  };\n  \n  // 解除关联\n  const unlinkShadowAccount = () => {\n    // 清除关联状态\n    setLocalIsLinked(false);\n    setShadowSignatureDetails(null);\n    \n    // 清除本地存储中的关联数据\n    localStorage.removeItem('shadowSignatureDetails');\n    \n    // 通知父组件\n    if (onShadowAccountUpdated) {\n      onShadowAccountUpdated(localShadowAddress, false);\n    }\n    \n    setStatus('影子账户关联已解除，您可以重新关联或创建新的影子账户。');\n  };\n  \n  useEffect(() => {\n    if (shadowWallet) {\n      console.log('影子钱包已设置:', shadowWallet.address);\n    }\n  }, [shadowWallet]);\n  \n  return (\n    <div className=\"shadow-account-manager\">\n      <div className=\"shadow-account-section\">\n        <h3>影子账户</h3>\n        {!localShadowAddress ? (\n          <div className=\"shadow-account-create\">\n            <p>影子账户是一个普通的以太坊账户，可以通过环签名与您的根账户关联，但不会泄露您的身份。</p>\n            <button \n              onClick={generateShadowAccount} \n              className=\"generate-button\"\n            >\n              生成新的影子账户\n            </button>\n          </div>\n        ) : (\n          <div className=\"shadow-account-info\">\n            <p><strong>影子账户地址:</strong> {localShadowAddress}</p>\n            \n            {!localIsLinked ? (\n              <div className=\"link-section\">\n                <p>您需要将此影子账户与您的根账户关联，才能使用它进行匿名交易。</p>\n                <button \n                  onClick={linkShadowAccount} \n                  className=\"link-button\"\n                  disabled={!isCertified || !certificationDetails}\n                >\n                  关联影子账户\n                </button>\n                \n                {!isCertified && (\n                  <p className=\"warning\">请先完成根账户认证，才能关联影子账户。</p>\n                )}\n              </div>\n            ) : (\n              <div className=\"linked-status\">\n                <div className=\"status-header\">\n                  <h4>关联状态</h4>\n                  <span className=\"linked-badge\">已关联</span>\n                </div>\n                <p>您的影子账户已成功关联根账户。</p>\n                <p>现在您可以使用此影子账户进行交易，而不会泄露您的根账户身份。</p>\n                \n                <button \n                  onClick={unlinkShadowAccount}\n                  className=\"unlink-button\"\n                >\n                  解除关联\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      \n      {processingStep && (\n        <div className=\"processing-steps\">\n          <h4>处理步骤</h4>\n          <div className=\"step-indicator\">\n            <div className={`step ${processingStep === '生成环签名' ? 'active' : ''}`}>生成环签名</div>\n            <div className={`step ${processingStep === '提交交易' ? 'active' : ''}`}>提交交易</div>\n            <div className={`step ${processingStep === '等待确认' ? 'active' : ''}`}>等待确认</div>\n            <div className={`step ${processingStep === '完成关联' ? 'active' : ''}`}>完成关联</div>\n          </div>\n        </div>\n      )}\n      \n      {status && <p className=\"status-message\">{status}</p>}\n      \n      {localIsLinked && shadowSignatureDetails && (\n        <div className=\"usage-guide\">\n          <h3>如何使用您的影子账户</h3>\n          <ol>\n            <li>\n              <strong>导入到钱包：</strong> 您可以将影子账户的私钥导入到任何以太坊钱包中（如 MetaMask）。\n            </li>\n            <li>\n              <strong>进行交易：</strong> 使用影子账户进行交易，就像使用普通以太坊账户一样。\n            </li>\n            <li>\n              <strong>保持匿名：</strong> 由于影子账户与您的根账户之间的关联是通过环签名建立的，没有人能够确定您是环中的哪个成员。\n            </li>\n            <li>\n              <strong>安全提示：</strong> 请妥善保管您的影子账户私钥，不要将其泄露给他人。\n            </li>\n          </ol>\n          \n          <div className=\"private-key-section\">\n            <h4>影子账户私钥</h4>\n            <p className=\"warning\">\n              警告：私钥是访问您账户的唯一凭证，请妥善保管，不要泄露给他人。\n            </p>\n            <button \n              onClick={() => {\n                const shadowData = JSON.parse(localStorage.getItem('shadowWallet'));\n                if (shadowData) {\n                  alert(`您的影子账户私钥：${shadowData.privateKey}\\n\\n请妥善保管，不要泄露给他人！`);\n                }\n              }}\n              className=\"show-key-button\"\n            >\n              显示私钥\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ShadowAccountManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}